js面试常见知识点：

检查数据类型：
1.typeof直接在计算机底层基于数据类型的值（二进制）进行检测，对象存储在计算机中，都是以000开始的二进制存储
  typeof null  == 'object'     //  null也是开头为000的二进制存储，所以null检测为对象
  typeof 普通对象/数组对象/日期对象/正则对象/  == 'object'

2. instanceof 检测当前实例是否属于某个类，底层机制：只要当前类出现在实例的原型链上，结果都是true
  由于原型是可以被修改的，所以检测结果可能不准确；
  不能检测基本数据类型：1 instanceof Number， 结果为false 

3. constructor 跟instanceof差不多，但是constructor可以检测基本数据类型：1.constructor === Number  // true
  同样由于constructor是可以被修改的，所以检测结果可能不准确

4. Object.prototype.toString.call(value)
  标准检测数据类型的方法：它并不是转换为字符串，而是返回当前实例所属类的信息
  注意：是要这样子调用Object.prototype.toString.call(value)，而不是这样调用 [1,2].toString()，直接调用的toString方法是底层重写过的，
           原始的toString方法就是返回当前实例所属类的信息。
           针对数字，重写过的toString可以传入一个参数，表示用多少进制来显示字符串

总结： 实际检测类型或者深拷贝时应该先用typeof判断，如果是对象再用Object.prototype.toString.call(value)

************************************************************************************************************************************************************************************

三类循环对比及性能分析：forEach、for in、for of
for和while：第一、第二
1.使用var 声明i时，2个性能差不多，使用let声明i时，for循环性能更好

forEach循环：第三
1.forEach比for性能慢很多

for in循环：第五
1.迭代当前对象中所以的可枚举属性，查找机制上一定会查到原型链上
2.for in是最慢的；
3.遍历以数字优先
4.无法遍历symbol属性
5.可以遍历到公有属性中的可枚举属性

for of循环：第四
1.迭代有实现iterator规范的对象

************************************************************************************************************************************************************************************

从输入url地址到看见页面，中间都经历了什么
第一步：url解析：
  1.url地址解析：http://www.baidu.com?name=zs&age=18#id
  2.url编码：encodeURI/decodeURI、encodeURIComponent/decodeURIComponent，把url中的特殊字符进行编码
第二步：缓存检查：
  缓存位置：memory cache 内存缓存    disk cache 硬盘缓存 
  1.新打开一个网页：找的是disk cache中的缓存，因为memory cache已经被清除了
  2.普通刷新：先找memory cache，然后才是disk cache
  3.强制刷新：不使用缓存，直接发送请求获取最新的内容
第三步：DNS解析：
  1.递归查询：
     浏览器缓存-->本地hosts文件-->本地DNS解析器缓存-->本地DNS服务器
  2.迭代查询：
     如果本地DNS服务器也没有，本地DNS服务器依次向 根域名服务器、顶级域名服务器、权威域名服务器获取相应信息，
     然后再去访问对应ip
  3.DNS解析性能优化：DNS预解析
     如果没有DNS缓存，DNS解析需要耗费一些时间，这样会阻塞网页加载，DNS预解析可以把要访问的域名预先解析了  
     <link rel="dns-prefetch" href="//static.360buyimg.com">  // 京东网站DNS预解析
第四步：TCP三次握手：
第五步：传输数据：
第六步：TCP四次挥手：
第七步：页面渲染

***************************************************************************************************************************************************
watch：
watch是一个watcher，监听的响应式数据收集了这个watcher，在数据改变时会通知watcher执行getter回调
computed:
computed是一个watcher，get方法里面的响应式数据会收集这个watcher，在数据改变时会通知watcher执行getter回调